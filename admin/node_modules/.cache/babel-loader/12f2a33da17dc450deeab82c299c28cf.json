{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSucces: (state, action) => {\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    getUsersStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    getUsersSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products = action.payload;\n    },\n    getUsersFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  getUsersStart,\n  getUsersSuccess,\n  getUsersloginStart,\n  loginSucces,\n  loginFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["C:/Users/Tudor/Desktop/SitePW/admin/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSucces","action","payload","loginFailure","getUsersStart","getUsersSuccess","products","getUsersFailure","getUsersloginStart","actions","reducer"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAC,MADqB;AAE1BC,EAAAA,YAAY,EAAC;AACTC,IAAAA,WAAW,EAAG,IADL;AAETC,IAAAA,UAAU,EAAC,KAFF;AAGTC,IAAAA,KAAK,EAAC;AAHG,GAFa;AAO1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAEC,KAAD,IAAS;AAChBA,MAAAA,KAAK,CAACJ,UAAN,GAAiB,IAAjB;AACH,KAHK;AAINK,IAAAA,WAAW,EAAC,CAACD,KAAD,EAAOE,MAAP,KAAgB;AACxBF,MAAAA,KAAK,CAACJ,UAAN,GAAiB,KAAjB;AACAI,MAAAA,KAAK,CAACL,WAAN,GAAkBO,MAAM,CAACC,OAAzB;AACH,KAPK;AAQNC,IAAAA,YAAY,EAAEJ,KAAD,IAAS;AAClBA,MAAAA,KAAK,CAACJ,UAAN,GAAiB,KAAjB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAY,IAAZ;AACH,KAXK;AAYNQ,IAAAA,aAAa,EAAGL,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,IAAnB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,KAAd;AACD,KAfG;AAgBJS,IAAAA,eAAe,EAAE,CAACN,KAAD,EAAQE,MAAR,KAAmB;AAClCF,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,MAAAA,KAAK,CAACO,QAAN,GAAiBL,MAAM,CAACC,OAAxB;AACD,KAnBG;AAoBJK,IAAAA,eAAe,EAAGR,KAAD,IAAW;AAC1BA,MAAAA,KAAK,CAACJ,UAAN,GAAmB,KAAnB;AACAI,MAAAA,KAAK,CAACH,KAAN,GAAc,IAAd;AACD;AAvBG;AAPgB,CAAD,CAA7B;AAmCA,OAAO,MAAM;AAAEQ,EAAAA,aAAF;AAAgBC,EAAAA,eAAhB;AAAgCG,EAAAA,kBAAhC;AAAoDR,EAAAA,WAApD;AAAiEG,EAAAA;AAAjE,IAAkFZ,SAAS,CAACkB,OAAlG;AACP,eAAelB,SAAS,CAACmB,OAAzB","sourcesContent":["import {createSlice} from \"@reduxjs/toolkit\"\r\n\r\nconst userSlice = createSlice({\r\n    name:\"user\",\r\n    initialState:{\r\n        currentUser : null,\r\n        isFetching:false,\r\n        error:false\r\n    },\r\n    reducers: {\r\n        loginStart:(state)=>{\r\n            state.isFetching=true;\r\n        },\r\n        loginSucces:(state,action)=>{\r\n            state.isFetching=false;\r\n            state.currentUser=action.payload;\r\n        },\r\n        loginFailure:(state)=>{\r\n            state.isFetching=false;\r\n            state.error=true;\r\n        },\r\n        getUsersStart: (state) => {\r\n            state.isFetching = true;\r\n            state.error = false;\r\n          },\r\n          getUsersSuccess: (state, action) => {\r\n            state.isFetching = false;\r\n            state.products = action.payload;\r\n          },\r\n          getUsersFailure: (state) => {\r\n            state.isFetching = false;\r\n            state.error = true;\r\n          },\r\n    },\r\n});\r\n\r\n\r\nexport const { getUsersStart,getUsersSuccess,getUsersloginStart, loginSucces, loginFailure } = userSlice.actions;\r\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}