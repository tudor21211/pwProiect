{"ast":null,"code":"import { publicRequest, userRequest } from \"../requestMethods\";\nimport { getProductFailure, getProductSuccess, getProductStart, deleteProductStart, deleteProductSuccess, deleteProductFailure } from \"./productRedux\";\nimport { loginFailure, loginStart, loginSucces } from \"./userRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSucces(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (err) {\n    dispatch(getProductFailure());\n  }\n};\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const updateProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const addProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};","map":{"version":3,"sources":["C:/Users/Tudor/Desktop/SitePW/admin/src/redux/apiCalls.js"],"names":["publicRequest","userRequest","getProductFailure","getProductSuccess","getProductStart","deleteProductStart","deleteProductSuccess","deleteProductFailure","loginFailure","loginStart","loginSucces","login","dispatch","user","res","post","data","err","getProducts","get","deleteProduct","id","delete","updateProduct","addProduct"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,QAA2C,mBAA3C;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,EAA+CC,eAA/C,EAAgEC,kBAAhE,EAAoFC,oBAApF,EAA0GC,oBAA1G,QAAqI,gBAArI;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAkCC,WAAlC,QAAqD,aAArD;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAP,EAAgBC,IAAhB,KAAyB;AAC1CD,EAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;;AACA,MAAI;AACA,UAAMK,GAAG,GAAG,MAAMd,aAAa,CAACe,IAAd,CAAmB,aAAnB,EAAiCF,IAAjC,CAAlB;AACAD,IAAAA,QAAQ,CAACF,WAAW,CAACI,GAAG,CAACE,IAAL,CAAZ,CAAR;AACH,GAHD,CAGC,OAAMC,GAAN,EAAU;AACPL,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AACH;AACJ,CARM;AAUP,OAAO,MAAMU,WAAW,GAAG,MAAON,QAAP,IAAoB;AAC3CA,EAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;;AACA,MAAI;AACA,UAAMU,GAAG,GAAG,MAAMd,aAAa,CAACmB,GAAd,CAAkB,WAAlB,CAAlB;AACAP,IAAAA,QAAQ,CAACT,iBAAiB,CAACW,GAAG,CAACE,IAAL,CAAlB,CAAR;AACH,GAHD,CAGC,OAAMC,GAAN,EAAU;AACPL,IAAAA,QAAQ,CAACV,iBAAiB,EAAlB,CAAR;AACH;AACJ,CARM;AAUP,OAAO,MAAMkB,aAAa,GAAG,OAAOC,EAAP,EAAUT,QAAV,KAAuB;AAChDA,EAAAA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR;;AACA,MAAI;AACA,UAAMS,GAAG,GAAG,MAAMb,WAAW,CAACqB,MAAZ,CAAoB,aAAYD,EAAG,EAAnC,CAAlB;AACAT,IAAAA,QAAQ,CAACN,oBAAoB,CAACe,EAAD,CAArB,CAAR;AACH,GAHD,CAGC,OAAMJ,GAAN,EAAU;AACPL,IAAAA,QAAQ,CAACL,oBAAoB,EAArB,CAAR;AACH;AACJ,CARM;AAWP,OAAO,MAAMgB,aAAa,GAAG,OAAOF,EAAP,EAAUT,QAAV,KAAuB;AAChDA,EAAAA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR;;AACA,MAAI;AACA,UAAMS,GAAG,GAAG,MAAMb,WAAW,CAACqB,MAAZ,CAAoB,aAAYD,EAAG,EAAnC,CAAlB;AACAT,IAAAA,QAAQ,CAACN,oBAAoB,CAACe,EAAD,CAArB,CAAR;AACH,GAHD,CAGC,OAAMJ,GAAN,EAAU;AACPL,IAAAA,QAAQ,CAACL,oBAAoB,EAArB,CAAR;AACH;AACJ,CARM;AAUP,OAAO,MAAMiB,UAAU,GAAG,OAAOH,EAAP,EAAUT,QAAV,KAAuB;AAC7CA,EAAAA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR;;AACA,MAAI;AACA,UAAMS,GAAG,GAAG,MAAMb,WAAW,CAACqB,MAAZ,CAAoB,aAAYD,EAAG,EAAnC,CAAlB;AACAT,IAAAA,QAAQ,CAACN,oBAAoB,CAACe,EAAD,CAArB,CAAR;AACH,GAHD,CAGC,OAAMJ,GAAN,EAAU;AACPL,IAAAA,QAAQ,CAACL,oBAAoB,EAArB,CAAR;AACH;AACJ,CARM","sourcesContent":["import { publicRequest, userRequest } from \"../requestMethods\";\r\nimport { getProductFailure, getProductSuccess ,getProductStart, deleteProductStart, deleteProductSuccess, deleteProductFailure} from \"./productRedux\";\r\nimport { loginFailure, loginStart,loginSucces } from \"./userRedux\"\r\n\r\nexport const login = async (dispatch,user) => {\r\n    dispatch(loginStart());\r\n    try {\r\n        const res = await publicRequest.post(\"/auth/login\",user)\r\n        dispatch(loginSucces(res.data));\r\n    }catch(err){\r\n        dispatch(loginFailure())\r\n    }\r\n};\r\n\r\nexport const getProducts = async (dispatch) => {\r\n    dispatch(getProductStart());\r\n    try {\r\n        const res = await publicRequest.get(\"/products\")\r\n        dispatch(getProductSuccess(res.data));\r\n    }catch(err){\r\n        dispatch(getProductFailure())\r\n    }\r\n};\r\n\r\nexport const deleteProduct = async (id,dispatch) => {\r\n    dispatch(deleteProductStart());\r\n    try {\r\n        const res = await userRequest.delete(`/products/${id}`)\r\n        dispatch(deleteProductSuccess(id));\r\n    }catch(err){\r\n        dispatch(deleteProductFailure())\r\n    }\r\n};\r\n\r\n\r\nexport const updateProduct = async (id,dispatch) => {\r\n    dispatch(deleteProductStart());\r\n    try {\r\n        const res = await userRequest.delete(`/products/${id}`)\r\n        dispatch(deleteProductSuccess(id));\r\n    }catch(err){\r\n        dispatch(deleteProductFailure())\r\n    }\r\n};\r\n\r\nexport const addProduct = async (id,dispatch) => {\r\n    dispatch(deleteProductStart());\r\n    try {\r\n        const res = await userRequest.delete(`/products/${id}`)\r\n        dispatch(deleteProductSuccess(id));\r\n    }catch(err){\r\n        dispatch(deleteProductFailure())\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}