{"ast":null,"code":"import { publicRequest, userRequest } from \"../requestMethods\";\nimport { getProductFailure, getProductSuccess, getProductStart, deleteProductStart, deleteProductSuccess, deleteProductFailure, updateProductStart, updateProductSuccess, updateProductFailure, addProductStart, addProductSuccess, addProductFailure } from \"./productRedux\";\nimport { getUsersStart, getUsersSuccess, getUsersFailure, loginFailure, loginStart, loginSucces } from \"./userRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSucces(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const getUsers = async dispatch => {\n  dispatch(getUsersStart());\n\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getUsersSuccess(res.data));\n  } catch (err) {\n    dispatch(getUsersFailure());\n  }\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (err) {\n    dispatch(getProductFailure());\n  }\n};\nexport const deleteProduct = async (id, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id));\n  } catch (err) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const updateProduct = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n\n  try {\n    const res = await userRequest.put(`/products/${id}`);\n    dispatch(updateProductSuccess({\n      id,\n      product\n    }));\n  } catch (err) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const addProduct = async (product, dispatch) => {\n  dispatch(addProductStart());\n\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n  } catch (err) {\n    dispatch(addProductFailure());\n  }\n};","map":{"version":3,"sources":["C:/Users/Tudor/Desktop/SitePW/admin/src/redux/apiCalls.js"],"names":["publicRequest","userRequest","getProductFailure","getProductSuccess","getProductStart","deleteProductStart","deleteProductSuccess","deleteProductFailure","updateProductStart","updateProductSuccess","updateProductFailure","addProductStart","addProductSuccess","addProductFailure","getUsersStart","getUsersSuccess","getUsersFailure","loginFailure","loginStart","loginSucces","login","dispatch","user","res","post","data","err","getUsers","get","getProducts","deleteProduct","id","delete","updateProduct","product","put","addProduct"],"mappings":"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","sourcesContent":["import { publicRequest, userRequest } from \"../requestMethods\";\r\nimport { getProductFailure, getProductSuccess ,getProductStart, deleteProductStart, deleteProductSuccess, deleteProductFailure,updateProductStart,updateProductSuccess,updateProductFailure, addProductStart , addProductSuccess , addProductFailure} from \"./productRedux\";\r\nimport { getUsersStart,getUsersSuccess,getUsersFailure,loginFailure, loginStart,loginSucces } from \"./userRedux\"\r\n\r\nexport const login = async (dispatch,user) => {\r\n    dispatch(loginStart());\r\n    try {\r\n        const res = await publicRequest.post(\"/auth/login\",user)\r\n        dispatch(loginSucces(res.data));\r\n    }catch(err){\r\n        dispatch(loginFailure())\r\n    }\r\n};\r\nexport const getUsers = async (dispatch) => {\r\n    dispatch(getUsersStart());\r\n    try {\r\n        const res = await publicRequest.get(\"/products\")\r\n        dispatch(getUsersSuccess(res.data));\r\n    }catch(err){\r\n        dispatch(getUsersFailure())\r\n    }\r\n};\r\nexport const getProducts = async (dispatch) => {\r\n    dispatch(getProductStart());\r\n    try {\r\n        const res = await publicRequest.get(\"/products\")\r\n        dispatch(getProductSuccess(res.data));\r\n    }catch(err){\r\n        dispatch(getProductFailure())\r\n    }\r\n};\r\n\r\nexport const deleteProduct = async (id,dispatch) => {\r\n    dispatch(deleteProductStart());\r\n    try {\r\n        const res = await userRequest.delete(`/products/${id}`)\r\n        dispatch(deleteProductSuccess(id));\r\n    }catch(err){\r\n        dispatch(deleteProductFailure())\r\n    }\r\n};\r\n\r\n\r\nexport const updateProduct = async (id, product, dispatch) => {\r\n    dispatch(updateProductStart());\r\n    try {\r\n        const res = await userRequest.put(`/products/${id}`)\r\n        dispatch(updateProductSuccess({id,product}));\r\n    }catch(err){\r\n        dispatch(updateProductFailure())\r\n    }\r\n};\r\n\r\nexport const addProduct = async (product ,dispatch) => {\r\n    dispatch(addProductStart());\r\n    try {\r\n        const res = await userRequest.post(`/products`,product)\r\n        dispatch(addProductSuccess(res.data));\r\n    }catch(err){\r\n        dispatch(addProductFailure())\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}